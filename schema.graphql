directive @Authenticate on QUERY | FIELD_DEFINITION

directive @hasPermissions(permissions: [String]) on QUERY | FIELD_DEFINITION | FIELD

directive @transformLists on FIELD_DEFINITION

type Error {
    path: String!
    message: String!
}


type MediaSummary {
    id: String!
    title: String!
    type: String!
    releaseDate: String!
    order: Int
}

type MediaDetail {
    id: String!
    title: String!
    type: String!
    releaseDate: String!
    imageUrl: String!
}

type MediaList {
    id: ID!
    title: String!
    public: Boolean
    items: [MediaSummary]!
}

type User {
    id: ID!
    email: String!
    permissions: [String!]
    lists: [MediaList]! @transformLists
}

type Mutation {
    register(email: String!, password: String!): [Error!],
    login(email: String!, password: String!): User
    logout: [Error!] @Authenticate
}

type Query {
    ping: String
    mediaSearch(search: String): [MediaSummary]
    mediaId(id: String, mediaType: String): MediaDetail
    me: User @hasPermissions(permissions: ["read:permissions"]) @Authenticate
}
